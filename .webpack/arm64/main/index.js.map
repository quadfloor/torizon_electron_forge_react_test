{"version":3,"file":"index.js","mappings":"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","sources":["webpack://qedgeui/./node_modules/electron-squirrel-startup/index.js","webpack://qedgeui/./node_modules/electron-squirrel-startup/node_modules/debug/src/browser.js","webpack://qedgeui/./node_modules/electron-squirrel-startup/node_modules/debug/src/debug.js","webpack://qedgeui/./node_modules/electron-squirrel-startup/node_modules/debug/src/index.js","webpack://qedgeui/./node_modules/electron-squirrel-startup/node_modules/debug/src/node.js","webpack://qedgeui/./node_modules/electron-squirrel-startup/node_modules/ms/index.js","webpack://qedgeui/external node-commonjs \"child_process\"","webpack://qedgeui/external node-commonjs \"electron\"","webpack://qedgeui/external node-commonjs \"fs\"","webpack://qedgeui/external node-commonjs \"net\"","webpack://qedgeui/external node-commonjs \"path\"","webpack://qedgeui/external node-commonjs \"tty\"","webpack://qedgeui/external node-commonjs \"util\"","webpack://qedgeui/webpack/bootstrap","webpack://qedgeui/webpack/runtime/compat","webpack://qedgeui/./src/main.js"],"sourcesContent":["var path = require('path');\nvar spawn = require('child_process').spawn;\nvar debug = require('debug')('electron-squirrel-startup');\nvar app = require('electron').app;\nvar run = function (args, done) {\n  var updateExe = path.resolve(path.dirname(process.execPath), '..', 'Update.exe');\n  debug('Spawning `%s` with args `%s`', updateExe, args);\n  spawn(updateExe, args, {\n    detached: true\n  }).on('close', done);\n};\nvar check = function () {\n  if (process.platform === 'win32') {\n    var cmd = process.argv[1];\n    debug('processing squirrel command `%s`', cmd);\n    var target = path.basename(process.execPath);\n    if (cmd === '--squirrel-install' || cmd === '--squirrel-updated') {\n      run(['--createShortcut=' + target + ''], app.quit);\n      return true;\n    }\n    if (cmd === '--squirrel-uninstall') {\n      run(['--removeShortcut=' + target + ''], app.quit);\n      return true;\n    }\n    if (cmd === '--squirrel-obsolete') {\n      app.quit();\n      return true;\n    }\n  }\n  return false;\n};\nmodule.exports = check();","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance ||\n  // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) ||\n  // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 ||\n  // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit');\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch (e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n    i;\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    args[0] = exports.coerce(args[0]);\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;else if (/^(no|off|false|disabled)$/i.test(val)) val = false;else if (val === 'null') val = null;else val = Number(val);\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function () {}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')();\n}\nvar stream = 1 === fd ? process.stdout : 2 === fd ? process.stderr : createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).split('\\n').map(function (str) {\n    return str.trim();\n  }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString() + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream(fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, {\n        autoClose: false\n      });\n      stream._type = 'fs';\n      break;\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n  stream._isStdio = true;\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","module.exports = require(\"child_process\");","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"path\");","module.exports = require(\"tty\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/native_modules/\";","// Modules to control application life and create native browser window\nconst {app, BrowserWindow} = require('electron')\nconst path = require('path')\n\n// Handle creating/removing shortcuts on Windows when installing/uninstalling.\nif (require('electron-squirrel-startup')) {\n  app.quit();\n}\nfunction createWindow () {\n  // Create the browser window.\n\n  //\n  // Attention. For the MACROS below: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY and MAIN_WINDOW_WEBPACK_ENTRY\n  // Please check https://www.electronforge.io/config/plugins/webpack\n  //\n  const mainWindow = new BrowserWindow({\n    width: 640,\n    height: 480,\n    webPreferences: {\n      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY\n    }\n  })\n\n  // and load the index.html of the app.\n  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);\n\n  // if embedded Linux set fullscreen\n  if (process.arch.includes(\"arm\")) {\n    mainWindow.setFullScreen(true);\n  }\n\n  // Open the DevTools.\n  mainWindow.webContents.openDevTools()\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.whenReady().then(() => {\n  createWindow()\n\n  app.on('activate', function () {\n    // On macOS it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (BrowserWindow.getAllWindows().length === 0) createWindow()\n  })\n})\n\n// Quit when all windows are closed, except on macOS. There, it's common\n// for applications and their menu bar to stay active until the user quits\n// explicitly with Cmd + Q.\napp.on('window-all-closed', function () {\n  if (process.platform !== 'darwin') app.quit()\n})\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\n"],"names":["path","spawn","debug","app","run","args","done","updateExe","resolve","dirname","process","execPath","detached","on","module","exports","platform","cmd","argv","target","basename","quit","check","load","r","storage","e","env","DEBUG","log","console","Function","prototype","apply","call","arguments","formatArgs","useColors","this","namespace","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","removeItem","window","type","document","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","toLowerCase","parseInt","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","err","message","enable","prevTime","createDebug","enabled","self","curr","Date","ms","prev","Array","length","i","coerce","unshift","format","formatter","val","bind","hash","charCodeAt","Math","abs","selectColor","init","Error","stack","disable","names","skips","split","len","push","substr","name","test","tty","util","inspectOpts","keys","Object","stream","write","prefix","join","toUTCString","Boolean","isatty","fd","filter","key","reduce","obj","prop","substring","_","k","toUpperCase","Number","DEBUG_FD","deprecate","stdout","stderr","binding","guessHandleType","WriteStream","_type","_handle","unref","SyncWriteStream","autoClose","Socket","readable","writable","read","_isStdio","createWritableStdioStream","o","inspect","map","str","trim","O","s","m","h","d","plural","n","floor","ceil","options","String","exec","parseFloat","parse","isNaN","long","round","fmtShort","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","ab","__dirname","BrowserWindow","createWindow","mainWindow","width","height","webPreferences","preload","MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY","loadURL","MAIN_WINDOW_WEBPACK_ENTRY","arch","includes","setFullScreen","webContents","openDevTools","whenReady","then","getAllWindows"],"sourceRoot":""}